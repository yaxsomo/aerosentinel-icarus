name: Aerosentinel CI Pipeline
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release (y/n)?'
        required: true
        default: 'y'
jobs:
  analyse-code:
    name: Quality
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.1.0
      - name: Install packages and dependencies
        run: |
          python3 -m pip install --upgrade pip
      - name: Flake8 static analysis
        uses: xanderhendriks/flake8-action@v2.1.0
        with:
          checkName: 'quality'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-aerosentinel_icarus:
    needs: analyse-code
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3.1.0
      - name: Determine short GIT hash
        id: short-sha
        run: |
          echo "sha=$(echo ${{github.sha}} | sed 's/^\(.\{10\}\).*$/\1/')" >> $GITHUB_OUTPUT
      - name: Bump version
        if: github.ref == 'refs/heads/master'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
          default_bump: minor
          fetch_all_tags: true
      - name: Version handling
        id: version_handling
        run: |
          if [ -z ${{ steps.tag_version.outputs.new_tag }} ]
          then
            version=0.0.0
            file_postfix=${{ steps.short-sha.outputs.sha }}-dev
          else
            version=${{ steps.tag_version.outputs.new_version }}
            file_postfix=$version
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "file_postfix=$file_postfix" >> $GITHUB_OUTPUT
          echo "major=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1/')" >> $GITHUB_OUTPUT
          echo "minor=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\2/')" >> $GITHUB_OUTPUT
          echo "bugfix=$(echo $version | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\3/')" >> $GITHUB_OUTPUT
      # Set project-target based on the presence of the Release folder
      - name: Set project target
        id: set_target
        run: |
          if [ -d "./Release" ]; then
            echo "project_target=aerosentinel_icarus" >> $GITHUB_ENV
          else
            echo "project_target=aerosentinel_icarus/Debug" >> $GITHUB_ENV
          fi

      - name: Build the aerosentinel_icarus binary
        uses: xanderhendriks/action-build-stm32cubeide@v13.0
        with:
          project-path: './'
          project-target: ${{ env.project_target }}
        env:
          ENV_VERSION_MAJOR: ${{ steps.version_handling.outputs.major }}
          ENV_VERSION_MINOR: ${{ steps.version_handling.outputs.minor }}
          ENV_VERSION_BUGFIX: ${{ steps.version_handling.outputs.bugfix }}
          ENV_SHORT_GIT_HASH: ${{ steps.short-sha.outputs.sha }}

      - name: Copy and upload artifacts (Release)
        run: |
          if [ -d "./Release" ]; then
            echo "Release folder exists. Renaming and copying files."
            mkdir -p stm32-firmware
            cp Release/aerosentinel_icarus.bin stm32-firmware/aerosentinel_icarus-${{ steps.version_handling.outputs.file_postfix }}.bin
            cp Release/aerosentinel_icarus.elf stm32-firmware/aerosentinel_icarus-${{ steps.version_handling.outputs.file_postfix }}.elf
            cp Release/aerosentinel_icarus.list stm32-firmware/aerosentinel_icarus-${{ steps.version_handling.outputs.file_postfix }}.list
            cp Release/aerosentinel_icarus.map stm32-firmware/aerosentinel_icarus-${{ steps.version_handling.outputs.file_postfix }}.map
            echo "Files copied successfully. Uploading artifacts."
            # Upload artifacts
            actions/upload-artifact@v3.1.0 \
              --name stm32-firmware-aerosentinel_icarus-${{ steps.version_handling.outputs.file_postfix }} \
              --path stm32-firmware
          else
            echo "Release folder does not exist. Skipping copying and uploading."
          fi
  release:
    needs: [build-aerosentinel_icarus]
    if: github.ref == 'refs/heads/master' || github.event.inputs.release == 'y'
    name: Release
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          path: stm32-firmware
      - name: Determine version
        id: determine_version
        run: |
          if [ -n "$(find stm32-firmware -name 'stm32-firmware-aerosentinel_icarus-*-dev')" ]
          then
              version=0.0.0
              file_postfix=$(find stm32-firmware -name "stm32-firmware-aerosentinel_icarus-*" | sed 's/stm32-firmware\/stm32-firmware-aerosentinel_icarus-\(.*\)/\1/')
          else
              version=$(find stm32-firmware -name "stm32-firmware-aerosentinel_icarus-*" | sed 's/stm32-firmware\/stm32-firmware-aerosentinel_icarus-\([0-9\.]*\)/\1/')
              file_postfix=$version
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "file_postfix=$file_postfix" >> $GITHUB_OUTPUT
      - name: Release to Github
        id: create_release
        uses: ncipollo/release-action@v1.11.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.determine_version.outputs.file_postfix }}
          name: v${{ steps.determine_version.outputs.file_postfix }}
          commit: ${{ github.sha }}
          draft: false
          prerelease: false
          artifacts: "stm32-firmware/stm32-firmware-*/*"
